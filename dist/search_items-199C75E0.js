searchNodes=[{"doc":"Hauptmodul für die Kernlogik des neuralen Netzwerkes.","ref":"ElixirNeuralNetwork.html","title":"ElixirNeuralNetwork","type":"module"},{"doc":"Erstellt ein neurales Netz. Das Netz hat 28x28 Input-Neuronen, 128 &quot;versteckte&quot; Neuronen und 10 Ergebnis-Neuronen. Als Aktivierungs-Funktion wird hier für beide Ebenen die Logistische Funktion $\\sigma(x)$ verwendet.","ref":"ElixirNeuralNetwork.html#build/1","title":"ElixirNeuralNetwork.build/1","type":"function"},{"doc":"Stellt die Anzahl der Trainings- und Testdaten dar.","ref":"ElixirNeuralNetwork.html#display_data/1","title":"ElixirNeuralNetwork.display_data/1","type":"function"},{"doc":"Stellt das Bild als &quot;Heatmap&quot; dar. Hierdurch kann das Bild im Terminal dargestellt werden.","ref":"ElixirNeuralNetwork.html#display_image/1","title":"ElixirNeuralNetwork.display_image/1","type":"function"},{"doc":"Stellt das Netzwerk als Tebelle dar.","ref":"ElixirNeuralNetwork.html#display_network/1","title":"ElixirNeuralNetwork.display_network/1","type":"function"},{"doc":"Importiert den MNIST-Datensatz Der MNIST-Datensatz besteht aus 60.000 28x28 Pixel großen Bildern von handgeschriebenen Zahlen. ( https://en.wikipedia.org/wiki/MNIST_database ) Die Daten werden in einem &quot;Tuple&quot;, ein Container für eine bestimmte Anzahl von Elementen, gespeichert. Format iex&gt; download ( ) { images , labels }","ref":"ElixirNeuralNetwork.html#download/0","title":"ElixirNeuralNetwork.download/0","type":"function"},{"doc":"Lädt das Netzwerk und dessen Zustand aus der angegebenen Datei.","ref":"ElixirNeuralNetwork.html#load_state!/1","title":"ElixirNeuralNetwork.load_state!/1","type":"function"},{"doc":"Führt dem Netzwerk ein Bild ein, um die Ziffer zu erhalelten, welche das Netzwerk als höchste Warscheinlichkeit sieht.","ref":"ElixirNeuralNetwork.html#predict/2","title":"ElixirNeuralNetwork.predict/2","type":"function"},{"doc":"Wandelt die Bilder des Datensatz in für das Netz verarbeitbare Bilder zum erkennen einer Zahl um.","ref":"ElixirNeuralNetwork.html#prediction_images/1","title":"ElixirNeuralNetwork.prediction_images/1","type":"function"},{"doc":"Speichert das Netzwerk und dessen Zusaznd in der angegebenen Datei.","ref":"ElixirNeuralNetwork.html#save_state!/2","title":"ElixirNeuralNetwork.save_state!/2","type":"function"},{"doc":"Testet das neurale Netz. Hierzu werden über eine Generation die Testdaten in das Netz eingeführt und die Genauigkeit des Netzes erfasst.","ref":"ElixirNeuralNetwork.html#test/4","title":"ElixirNeuralNetwork.test/4","type":"function"},{"doc":"Trainiert das neurale Netz. Hierzu wird es über mehrere Generationen &quot;Epochen&quot; mit dem Trainingsdatensatz trainiert.","ref":"ElixirNeuralNetwork.html#train/4","title":"ElixirNeuralNetwork.train/4","type":"function"},{"doc":"Wandelt die Bilder des Datensatz in für das Netz verarbeitbare &quot;Batches&quot; von Matrizen um.","ref":"ElixirNeuralNetwork.html#transform_images/2","title":"ElixirNeuralNetwork.transform_images/2","type":"function"},{"doc":"Wandelt die gewünschten Ergebinisse des Datensatz in für das Netz verarbeitbare &quot;Batches&quot; von Matrizen um.","ref":"ElixirNeuralNetwork.html#transform_labels/2","title":"ElixirNeuralNetwork.transform_labels/2","type":"function"},{"doc":"Speist einen zufälligen","ref":"Mix.Tasks.Predict.html","title":"Mix.Tasks.Predict","type":"task"},{"doc":"Holt sich ein zufälliges Bild aus dem Datensatz und speist es in das neurale Netz ein. Der tranierte Zustand wird aus der Datei &quot;state.axon&quot; geladen, um damit die Zahl auf dem Bild vorherzusagen.","ref":"Mix.Tasks.Predict.html#run/1","title":"Mix.Tasks.Predict.run/1","type":"function"},{"doc":"Trainiert das neurale Netz mit dem MNIST-Datensatz.","ref":"Mix.Tasks.Train.html","title":"Mix.Tasks.Train","type":"task"},{"doc":"Formatiert den MNIST-Datensatz und traniert das neurale Netz. Separiert den Datensatz in Trainings- und Testdaten. Die Daten werden in einer Matrix gespeichert, um dann mit einer Kostenfunktion trainiert zu werden, nachdem sie in das neurale Netz eingespeist werden. Diese werden dann in die Trainings- und Testfunktion des neuralen Netzes eingespeist. Im Anschluss wird der trainierte Zustand in der Datei &quot;state.axon&quot; gespeichert.","ref":"Mix.Tasks.Train.html#run/1","title":"Mix.Tasks.Train.run/1","type":"function"},{"doc":"Einfaches neurales Netz zum erkennen von handschriftlich geschriebenen Zahlen. Basierend auf Michael Nielsen's &quot;Neural Networks and Deep Learning&quot; und dem &quot;MNIST&quot; Datensatz .","ref":"readme.html","title":"Elixir Neurales Netz","type":"extras"},{"doc":"Die folgenden Ressourcen zu der Sprache Elixir und neuralen Netzen habe ich mir zu Hilfe genommen. Das eben erwähnte Buch Neural Networks and Deep Learning von Michael Nielson Das Beispiel zum MNIST Datensatz der Nx-Library","ref":"readme.html#ressourcen","title":"Elixir Neurales Netz - Ressourcen","type":"extras"}]