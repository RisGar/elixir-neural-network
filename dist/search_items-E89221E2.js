searchNodes=[{"doc":"Hauptmodul des Neuralen Netzwerks.","ref":"ElixirNeuralNetwork.html","title":"ElixirNeuralNetwork","type":"module"},{"doc":"Hello world. Examples iex&gt; ElixirNeuralNetwork . hello ( ) :world","ref":"ElixirNeuralNetwork.html#hello/0","title":"ElixirNeuralNetwork.hello/0","type":"function"},{"doc":"Modul für wiederverwendete algebraische Funktionen. Diese enthalten u. a. die Aktivierungsfunktion.","ref":"ElixirNeuralNetwork.Algebra.html","title":"ElixirNeuralNetwork.Algebra","type":"module"},{"doc":"Logistische Funktion $\\sigma(x)$, eine Funktion mit einem S-förmigen Graphen. Im wesentlichen nur eine skalierte &amp; verschobene hyperbolische Tangensfunktion. https://de.wikipedia.org/wiki/Logistische_Funktion Wird für dieses Netz als Aktivierungsfunktion verwendet.","ref":"ElixirNeuralNetwork.Algebra.html#logistic/1","title":"ElixirNeuralNetwork.Algebra.logistic/1","type":"function"},{"doc":"Benutzen der Reziprokenregel zum Ableiten von $\\sigma(x)$. https://de.wikipedia.org/wiki/Reziprokenregel","ref":"ElixirNeuralNetwork.Algebra.html#logistic_prime/1","title":"ElixirNeuralNetwork.Algebra.logistic_prime/1","type":"function"},{"doc":"Implementation der numpy-Funktion randn() für 2 Dimensionen. Generieret zufällige Werte einer Normalverteilung mit einer Standardabweichung / Varianz $\\sigma = 1$ und einem Erwartungswert $\\mu = 0$. Erstellt eine 2-Dimensionale Matrix, bei der jede Reihe durch eine Liste dargestellt wird. https://de.wikipedia.org/wiki/Normalverteilung","ref":"ElixirNeuralNetwork.Algebra.html#randn/2","title":"ElixirNeuralNetwork.Algebra.randn/2","type":"function"},{"doc":"Modul für die Kernlogik des neuralen Netzwerkes.","ref":"ElixirNeuralNetwork.Network.html","title":"ElixirNeuralNetwork.Network","type":"module"},{"doc":"","ref":"ElixirNeuralNetwork.Network.html#init/1","title":"ElixirNeuralNetwork.Network.init/1","type":"function"},{"doc":"Einfaches neurales Netzwerk zum erkennen von handschriftlich geschriebenen Zahlen. Basierend auf Michael Nielsen's &quot;Neural Networks and Deep Learning&quot; und dem &quot;Fashion MNIST&quot; Datensatz von Zalando und","ref":"readme.html","title":"Elixir Neurales Netzwerk","type":"extras"},{"doc":"If available in Hex , the package can be installed by adding elixir_neural_network to your list of dependencies in mix.exs : def deps do [ { :elixir_neural_network , &quot;~&gt; 0.1.0&quot; } ] end Documentation can be generated with ExDoc and published on HexDocs . Once published, the docs can be found at https://hexdocs.pm/elixir_neural_network .","ref":"readme.html#installation","title":"Elixir Neurales Netzwerk - Installation","type":"extras"}]